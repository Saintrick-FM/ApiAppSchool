# Generated by Django 3.0.7 on 2021-05-06 15:34

import ApiRest.Ecole.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('identifiant', models.CharField(choices=[('Crèche', 'Crèche'), ('P1', 'P1'), ('P2', 'P2'), ('P3', 'P3'), ('CP1', 'CP1'), ('CP2', 'CP2'), ('CE1', 'CE1'), ('CE2', 'CE2'), ('CM1', 'CM1'), ('CM2', 'CM2'), ('6e', '6e'), ('5e', '5e'), ('4e', '4e'), ('3e', '3e')], max_length=50, primary_key=True, serialize=False)),
                ('heuresCours', models.CharField(default='7h30-13h', max_length=100, verbose_name='Heures de cours')),
                ('nbreSalles', models.IntegerField(default=1, verbose_name='Nbre de salles')),
                ('contenance', models.IntegerField()),
                ('totalFilles', models.IntegerField(editable=False, null=True, verbose_name='Total des filles')),
                ('totalGarcons', models.IntegerField(editable=False, null=True, verbose_name='Total des garçons')),
                ('redoublants', models.IntegerField(default=0, editable=False, null=True)),
                ('nouveaux', models.IntegerField(default=0, editable=False, null=True)),
                ('elevesVenuDailleurs', models.IntegerField(default=0, editable=False, null=True, verbose_name="Eleves venus d'ailleurs")),
                ('inscrits', models.IntegerField(editable=False, null=True)),
                ('scolarite', models.CharField(help_text='Frais à payer mensuellement Eg: 8000F', max_length=50)),
                ('annee_academique', models.CharField(default=ApiRest.Ecole.models.Classe.anneeAcademique, editable=False, max_length=50, verbose_name='Année académique :')),
            ],
        ),
        migrations.CreateModel(
            name='Cycle',
            fields=[
                ('nomCycle', models.CharField(choices=[('Garderie', 'Garderie'), ('Prescolaire', 'Prescolaire'), ('Primaire', 'Primaire'), ('College', 'College')], default=('Garderie', 'Garderie'), max_length=50, primary_key=True, serialize=False, verbose_name='Nom du cycle')),
                ('nbreSalles', models.IntegerField(editable=False, null=True, verbose_name='Total de salles')),
            ],
        ),
        migrations.CreateModel(
            name='Ecole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('nbreSites', models.IntegerField(default=2, verbose_name='Nbre de sites')),
                ('pays', models.CharField(max_length=100)),
                ('ville', models.CharField(max_length=200)),
                ('adresse', models.CharField(max_length=200)),
                ('telephone', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('siteInternet', models.CharField(max_length=200, null=True, verbose_name='Site internet')),
                ('prefixmatricule', models.CharField(max_length=200, verbose_name='Préfix matricule')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('numero', models.AutoField(primary_key=True, serialize=False)),
                ('adresse_site', models.CharField(max_length=250, verbose_name='Adresse site')),
                ('Nombre de cycles', models.IntegerField(default=2, verbose_name='Nbre de salles au primaire,')),
                ('Nbre de Salle en Garderie', models.IntegerField(default=0, verbose_name='Nbre de salles en garderie')),
                ('Nbre de Salle au Primaire', models.IntegerField(default=6, verbose_name='Nbre de salles au primaire')),
                ('Nbre de Salle au Collège', models.IntegerField(default=4, verbose_name='Nbre de salles au collège')),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('nomMatiere', models.CharField(default='', max_length=200, primary_key=True, serialize=False, verbose_name='nom de la matière')),
                ('codeMatiere', models.CharField(default='', max_length=200, unique=True, verbose_name='Code de la matière')),
                ('pluriProf', models.BooleanField(choices=[('Non', 'Non'), ('Oui', 'Oui')], default=('Non', 'Non'), verbose_name='Enseignée par plusieurs ?')),
                ('matiereDeBase', models.CharField(choices=[('Non', 'Non'), ('Oui', 'Oui')], default=('Non', 'Non'), max_length=50, verbose_name='Matiere de Base ?')),
                ('seanceParSemaine', models.IntegerField(default=0, verbose_name='Nbre de Séances/semaine')),
                ('coefficient', models.IntegerField(default=0)),
                ('groupeMatiere', models.CharField(choices=[('MATIERE_LITTERAIRES', 'Matières litteraires'), ('MATIERE_SCIENTIFIQUES', 'Matières scientifiques'), ('AUTRES_MATIERES', 'Autres matières')], default='', max_length=100)),
                ('classAssocie', models.ManyToManyField(related_name='matiere_de_la_classe', to='Ecole.Classe')),
            ],
            options={
                'db_table': 'Matière',
            },
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('enseignant_numero', models.AutoField(auto_created=True, db_column='n°', primary_key=True, serialize=False, verbose_name='N°:')),
                ('nom', models.CharField(help_text='Tapez tous les noms et prénoms', max_length=255, unique=True)),
                ('civilite', models.CharField(choices=[('Masculin', 'Masculin'), ('Feminin', 'Feminin')], default='', max_length=255)),
                ('date_naissance', models.CharField(help_text='Tappez juste la date de Naissance Eg: 11-Mai-1995', max_length=50)),
                ('lieu_naissance', models.CharField(blank=True, db_column='lieuDeNaissance', default='Brazzaville', max_length=50)),
                ('situation_sociale', models.CharField(choices=[('Marie', 'Marié(e)'), ('Divorce', 'Divorcé(e)'), ('Fiance', 'Fiancé(e)'), ('Veuf', 'Veuf(ve)'), ('Celibataire', 'Célibataire')], max_length=50)),
                ('nationalite', models.CharField(default='Congolaise', max_length=255)),
                ('adresse', models.CharField(max_length=255)),
                ('telephone', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('date_d_embauche', models.DateField()),
                ('mode_paiement', models.CharField(choices=[('Manuel', 'Manuel'), ('Virement', 'Virement Bancaire')], default=('Manuel', 'Manuel'), max_length=100, verbose_name='Mode de paiement')),
                ('intitule_du_compte', models.CharField(blank=True, help_text="Ecrire le nom du compte bancaire de l'enseignant", max_length=250, null=True, unique=True)),
                ('numero_du_compte_bancaire', models.CharField(blank=True, max_length=250, null=True, unique=True)),
                ('numero_cnss', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='mode de paiement')),
                ('category', models.CharField(choices=[('Primaire', 'Primaire'), ('College', 'College')], default=('College', 'College'), max_length=30, verbose_name="Catégorie d'employé")),
                ('cree_le', models.DateTimeField(auto_now_add=True, verbose_name='créé_le')),
                ('modifie_at', models.DateTimeField(auto_now=True, verbose_name='modifié_le')),
                ('classes_occupees', models.ManyToManyField(related_name='enseignant_classes', to='Ecole.Classe', verbose_name="classe(s) d'enseignement")),
                ('matiere_enseigne', models.ManyToManyField(default='', related_name='enseignant_matieres', to='Ecole.Matiere', verbose_name='matière(s) enseignée(s)')),
            ],
            options={
                'ordering': ['-cree_le'],
            },
        ),
        migrations.AddField(
            model_name='classe',
            name='cycle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classe_cycle', to='Ecole.Cycle'),
        ),
        migrations.AddField(
            model_name='classe',
            name='referenceSite',
            field=models.ManyToManyField(default='', related_name='classe_site', to='Ecole.Site', verbose_name='Site n°:'),
        ),
    ]
